# Default values for openldap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

masterReplicaCount: 3
slaveReplicaCount: 3

updateStrategy: {}
  # When a StatefulSet's .spec.updateStrategy.type is set to OnDelete,
  # the StatefulSet controller will not automatically update the Pods
  # in a StatefulSet. Users must manually delete Pods to cause the
  # controller to create new Pods that reflect modifications made
  # to a StatefulSet's .spec.template.
  #
  # type: OnDelete
  #
  # or
  #
  # When a StatefulSet's .spec.updateStrategy.type is set to RollingUpdate,
  # the StatefulSet controller will delete and recreate each Pod in the StatefulSet.
  # It will proceed in the same order as Pod termination (from the largest ordinal
  # to the smallest), updating each Pod one at a time. It will wait until an updated
  # Pod is Running and Ready prior to updating its predecessor.
  #
  # type: RollingUpdate
  # rollingUpdate:
  #   partition: 1
images:
  # pullSecret: harbor
  pullPolicy: Always
  openldap:
    repository: arhilazar/openldap
    tag: latest
  fluentd:
    repository: arhilazar/fluentd-splunk
    tag: latest
  logrotate:
    repository: blacklabelops/logrotate
    tag: "1.3"

# Spcifies an existing secret to be used for admin and config user passwords
existingSecret: ""
## Add additional labels to all resources
extraLabels: {}
## Add additional annotations to pods
podAnnotations: {}
service:
  annotations: {}

  ldapPort: 389
  sslLdapPort: 636

  ## If service type NodePort, define the value here
  #ldapPortNodePort:
  #sslLdapPortNodePort:
  ## List of IP addresses at which the service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []

  type: ClusterIP
  # type: LoadBalancer
  master:
    loadBalancerIP: ''
    # loadBalancerSourceRanges: []
  slave:
    loadBalancerIP: ''
    # loadBalancerSourceRanges: []

# Default configuration for openldap as environment variables. These get injected directly in the container.
# Use the env variables from https://github.com/osixia/docker-openldap#beginner-guide
env:
  LDAP_LOG_LEVEL: "256"
  LDAP_ORGANISATION: "Example"
  LDAP_DOMAIN: "example.org"
  LDAP_READONLY_USER: "false"
  LDAP_READONLY_USER_USERNAME: "readonly"
  LDAP_READONLY_USER_PASSWORD: "readonly"
  LDAP_RFC2307BIS_SCHEMA: "false"
  LDAP_BACKEND: "mdb"
  LDAP_TLS: "true"
  LDAP_TLS_CRT_FILENAME: "tls.crt"
  LDAP_TLS_KEY_FILENAME: "tls.key"
  LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
  LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
  LDAP_TLS_ENFORCE: "false"
  CONTAINER_LOG_LEVEL: "4"
  LDAP_TLS_REQCERT: "never"
  KEEP_EXISTING_CONFIG: "false"
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
  LDAP_SSL_HELPER_PREFIX: "ldap"
  LDAP_TLS_VERIFY_CLIENT: "never"
  LDAP_TLS_PROTOCOL_MIN: "3.0"
  LDAP_TLS_CIPHER_SUITE: "NORMAL"
  LOG_DIR: "/var/log/openldap"
  LOG_FILE: "stdout.log"

# Set the container log level
# Valid log levels: none, error, warning, info (default), debug, trace
logLevel: info
log:
  directory: "/var/log/openldap"
  stdout: "stdout.log"
  auditlog: "auditlog.ldif"

logrotate:
  check_interval: "daily" # Could be "hourly", "daily", "weekly", "monthly" or "yearly"
  max_log_size: "10M"
  old_copies: 14
  compress: true

# Default Passwords to use, stored as a secret.
# You can override these at install time with
# helm install openldap --set openldap.adminPassword=<passwd>,openldap.configPassword=<passwd>
adminPassword: Not@SecureP@ssw0rd
configPassword: Not@SecureP@ssw0rd

# Custom openldap configuration files used to override default settings
# customLdifFiles:
  # 01-default-users.ldif: |-
    # Predefine users here

replication:
  enabled: true
  # Enter the name of your cluster, defaults to "cluster.local"
  clusterName: "cluster.local"
  retry: 60
  timeout: 1
  interval: 00:00:00:10
  starttls: "critical"
  tls_reqcert: "never"
## Persist data to a persistent volume
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "local-path"
  accessModes:
    - ReadWriteOnce
  size: 8Gi

fluentd:
  enabled: true
  refresh_interval: "1s"
  splunk:
    host: 127.0.0.1
    port: 8088
    token: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    force_http: false
    insecure_ssl: false
    flush_interval: "5s"

resources: {}
 # requests:
 #   cpu: "100m"
 #   memory: "256Mi"
 # limits:
 #   cpu: "500m"
 #   memory: "512Mi"

nodeSelector: {}

tolerations: []

# settings for enabling TLS with custom certificate
tls:
  enabled: false
  secretMaster: "ldap-tls-master"  # The name of a kubernetes.io/tls type secret to use for TLS
  secretSlave:  "ldap-tls-slave"   # The name of a kubernetes.io/tls type secret to use for TLS
  CA:
    enabled: true
  files:
    master:
      tlsCrt: |
            -----BEGIN CERTIFICATE-----
            <cert>
            -----END CERTIFICATE-----
      tlsKey: |
            -----BEGIN RSA PRIVATE KEY-----
            <key>
            -----END RSA PRIVATE KEY-----
      caCrt: |
            -----BEGIN CERTIFICATE-----
            <ca>
            -----END CERTIFICATE-----
      dhparamPem: |
            -----BEGIN DH PARAMETERS-----
            <dhparam>
            -----END DH PARAMETERS-----
    slave:
      tlsCrt: |
            -----BEGIN CERTIFICATE-----
            <cert>
            -----END CERTIFICATE-----
      tlsKey: |
            -----BEGIN RSA PRIVATE KEY-----
            <key>
            -----END RSA PRIVATE KEY-----
      caCrt: |
            -----BEGIN CERTIFICATE-----
            <ca>
            -----END CERTIFICATE-----
      dhparamPem: |
            -----BEGIN DH PARAMETERS-----
            <dhparam>
            -----END DH PARAMETERS-----
